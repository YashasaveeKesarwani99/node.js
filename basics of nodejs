Node.js is a javascript runtime enviroment. Here we'll focus on writing backend in javascript using node.js

    1. fs - One of the core modules of node.js used to perform functions on file
        1. writeFileSync() - to make a file and write data into it.
        2. 302 - is a statusCode for redirection. 
        
    2. http - again, a core module of node.js used to create a server and work in it
        1. createServer() - as the name suggests
        2. write()
        3. end() - to mark the end of process.
        
    3. Streams and Buffers - The request is simply read by node in chunks of data and not as a whole so that we can start to work 
       on the data without having to wait for full data to be downloaded. Buffer is the station at which the developer can start working
       on chunks of data.
       
    4. Nodejs consist of event listeners under the on() method. for example - data,end, etc.
    
    5. The execution of code may not be neccesarliy be line wise. Taking advantage of this one should never block code executin as a good 
       programming practice. Therefore, instead of using writeFileSync() which blocks the future execution of code, use writeFile().
       
    6. Single Thread, Event Loop and Blocking Code -   nodejs uses EVENT LOOP and WORKER POOL to handle call back functions and to do the    
       the heavy lifting work in the background.   
